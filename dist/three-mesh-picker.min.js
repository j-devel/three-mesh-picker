!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("THREE")):"function"==typeof define&&define.amd?define(["THREE"],t):"object"==typeof exports?exports.MeshPicker=t(require("THREE")):e.MeshPicker=t(e.THREE)}("undefined"!=typeof self?self:this,function(e){return function(e){function t(n){if(i[n])return i[n].exports;var r=i[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var i={};return t.m=e,t.c=i,t.d=function(e,i,n){t.o(e,i)||Object.defineProperty(e,i,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var i=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(i,"a",i),i},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,i){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=i(1),r=function(e){return e&&e.__esModule?e:{default:e}}(n);t.default=r.default,e.exports=t.default},function(e,t,i){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),o=i(2),a=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t.default=e,t}(o),s=function(){function e(t,i){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(n(this,e),void 0===t||void 0===i)throw"error: both viewport width and height must be provided.";var o=document.createElement("canvas");o.width=t,o.height=i,this._canvas=o,this._renderer=new a.WebGLRenderer({canvas:o});var s=r.renderTagetWidth?r.renderTagetWidth:512,u=r.renderTagetHeight?r.renderTagetHeight:512;this._rt=new a.WebGLRenderTarget(s,u,{magFilter:a.NearestFilter,minFilter:a.NearestFilter,wrapS:a.ClampToEdgeWrapping,wrapT:a.ClampToEdgeWrapping}),this._side=void 0!==r.side?r.side:a.FrontSide,this._materialPick=new a.RawShaderMaterial({vertexShader:"\n                precision mediump float;\n                precision mediump int;\n                uniform mat4 modelViewMatrix;\n                uniform mat4 projectionMatrix;\n                attribute vec3 position;\n                attribute vec4 color;\n                varying vec4 vColor;\n                void main() {\n                    vColor = color;\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n                }\n            ",fragmentShader:"\n                precision mediump float;\n                precision mediump int;\n                varying vec4 vColor;\n                void main() {\n                    gl_FragColor = vColor;\n                }\n            ",side:this._side,transparent:!1}),this._scene=new a.Scene,this._meshPairs=[],this._len=0,this._mapUuidIdx={},this._materialDepth=new a.MeshDepthMaterial({depthPacking:a.RGBADepthPacking,side:this._side});this._unpackFactors=new a.Vector4(255/256/16777216,255/256/65536,255/256/256,255/256)}return r(e,[{key:"screening",value:function(e,t){return t>16777215?(console.log("nop: exceeded the max number of meshes supported.\n                Or, call clear() and add() meshes again."),!1):e instanceof a.Mesh?!this.has(e)||(console.log("nop: already added."),!1):(console.log("nop: the base object is not of type THREE.Mesh"),!1)}},{key:"createPickableFrom",value:function(e,t){var i=e.clone();i.material=this._materialPick;for(var n=i.geometry.clone(),r=t,o=0;o<n.faces.length;o++)n.faces[o].color.setHex(r);return i.material.vertexColors=a.FaceColors,i.material.colorsNeedUpdate=!0,i.geometry=n,i}},{key:"has",value:function(e){return e.uuid in this._mapUuidIdx}},{key:"_truncateMeshPairs",value:function(){for(var e=this._meshPairs,t=e.length-1;t>=0&&null===e[t];t--)e.pop(),this._len--}},{key:"add",value:function(e){this._truncateMeshPairs();var t=this._len;if(this.screening(e,t)){var i=this.createPickableFrom(e,t);this._meshPairs.push([e,i]),this._mapUuidIdx[e.uuid]=t,this._scene.add(i),this._len++}}},{key:"remove",value:function(e){if(!this.has(e))return void console.log("nop, not found");var t=this._mapUuidIdx[e.uuid];delete this._mapUuidIdx[e.uuid];var i=this._meshPairs[t][1];this._meshPairs[t]=null,this._truncateMeshPairs(),this._scene.remove(i),i.geometry.dispose(),i=null}},{key:"list",value:function(){var e=[];return this._meshPairs.forEach(function(t){null!==t&&e.push(t[0])}),e}},{key:"count",value:function(){return Object.keys(this._mapUuidIdx).length}},{key:"clear",value:function(){var e=this,t=this.list();t.forEach(function(t){e.remove(t)}),t.length=0,this._meshPairs.length=0,this._len=0}},{key:"dispose",value:function(){this.clear(),this._materialPick=void 0,this._scene=void 0,this._canvas=void 0,this._renderer=void 0,this._rt=void 0}},{key:"updateWidth",value:function(e){this._canvas.width=e}},{key:"updateHeight",value:function(e){this._canvas.height=e}},{key:"pickMesh",value:function(e,t,i){return this._inspect(e,t,i,!1)}},{key:"pickPoint",value:function(e,t,i){return this._inspect(e,t,i,!0)}},{key:"_inspect",value:function(e,t,i,n){if(void 0===i)return console.log("nop, camera not set..."),null;this._meshPairs.forEach(function(e){null!==e&&(e[1].position.x=e[0].position.x,e[1].position.y=e[0].position.y,e[1].position.z=e[0].position.z,e[1].rotation.x=e[0].rotation.x,e[1].rotation.y=e[0].rotation.y,e[1].rotation.z=e[0].rotation.z)});var r=this._scene.background;this._scene.background=new a.Color(16777215),n?(this._scene.overrideMaterial=this._materialDepth,this._renderer.render(this._scene,i,this._rt),this._scene.overrideMaterial=null):this._renderer.render(this._scene,i,this._rt),this._scene.background=r;var o=new Uint8Array(4),s=this._canvas.width,u=this._canvas.height;this._renderer.readRenderTargetPixels(this._rt,e/s*this._rt.width,(1-t/u)*this._rt.height,1,1,o);var l=o[0]<<16|o[1]<<8|o[2];if(16777215===l)return null;if(n){var c=this.computeDepth(o,i.far,i.near),h=this.getPositionFromViewZ(c,e,t,i,s,u);return console.log("point:",h),h}return this._meshPairs[l][0]}},{key:"computeDepth",value:function(e,t,i){return i*t/((t-i)*(new a.Vector4).fromArray(e).multiplyScalar(1/255).dot(this._unpackFactors)-t)}},{key:"getPositionFromViewZ",value:function(e,t,i,n,r,o){var s=new a.Vector3(t/r*2-1,-i/o*2+1,.5),u=new a.Matrix4;return u.getInverse(n.projectionMatrix),s.applyMatrix4(u),s.multiplyScalar(e/s.z),s.applyMatrix4(n.matrixWorld),s}},{key:"getPositionInfinity",value:function(e,t,i){return this.getPositionFromViewZ(-i.far,e,t,i,this._canvas.width,this._canvas.height)}},{key:"raycast",value:function(e,t,i,n){var r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=new a.Raycaster,s=new a.Vector2;s.x=e/this._canvas.width*2-1,s.y=-t/this._canvas.height*2+1,o.setFromCamera(s,n);var u=o.intersectObjects(i,r);return u.length>0?u[0]:null}},{key:"log",value:function(){console.log("log(): ======== ========"),console.log("this._len:",this._len),console.log("this.count():",this.count()),console.log("this._scene:",this._scene),console.log("this._meshPairs (null holes allowed; but must be truncated):",this._meshPairs),console.log("this._mapUuidIdx:",this._mapUuidIdx)}}]),e}();t.default=s,e.exports=t.default},function(t,i){t.exports=e}])});